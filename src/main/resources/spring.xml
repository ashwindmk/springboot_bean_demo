<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util = "http://www.springframework.org/schema/util"
       xmlns:context = "http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/util
         http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema//context/spring-context.xsd">

    <!-- Get bean by alias -->
    <alias name="line01" alias="line-one-alias" />

    <!-- Scope: singleton, per context by default -->
    <bean id="center" name="origin" class="com.ashwin.java.springbootbeandemo.domain.model.Point" scope="singleton">
        <property name="x" value="0" />
        <property name="y" value="0" />
    </bean>

    <bean id="point01" class="com.ashwin.java.springbootbeandemo.domain.model.Point">
        <property name="x" value="10" />
        <property name="y" value="0" />
    </bean>

    <bean id="point02" class="com.ashwin.java.springbootbeandemo.domain.model.Point">
        <property name="x" value="0" />
        <property name="y" value="10" />
    </bean>

    <!-- Scope: prototype, new instance for every bean request -->
    <bean id="dynamicPoint" class="com.ashwin.java.springbootbeandemo.domain.model.Point" scope="prototype">
        <property name="x" value="10" />
        <property name="y" value="10" />
    </bean>

    <bean id="triangle01" class="com.ashwin.java.springbootbeandemo.domain.model.Triangle">
        <!-- Constructor injection -->
        <constructor-arg type="java.lang.String" index="0" value="equilateral" />
        <constructor-arg type="double" index="1" value="10"/>
        <constructor-arg type="double" index="2" value="20"/>

        <!-- Field injection -->
        <property name="color" value="red" />
    </bean>

    <!--
    <bean id="square" class="com.ashwin.java.springbootbeandemo.domain.model.Square" autowire="byName">
        <property name="length" value="12" />
    </bean>
    -->

    <bean id="line01" name="line-one" class="com.ashwin.java.springbootbeandemo.domain.model.Line">
        <!-- ref can be id, name, or alias-->
        <property name="a" ref="center" />

        <!-- Inner bean -->
        <property name="b">
            <bean class="com.ashwin.java.springbootbeandemo.domain.model.Point">
                <property name="x" value="10" />
                <property name="y" value="0" />
            </bean>
        </property>
    </bean>

    <bean id="line02" name="line-two" class="com.ashwin.java.springbootbeandemo.domain.model.Line">
        <property name="a" ref="origin" />
        <!--<property name="refA">-->
            <!--<idref bean="center" />-->
        <!--</property>-->

        <!-- Inner bean -->
        <property name="b">
            <bean id="line02b" class="com.ashwin.java.springbootbeandemo.domain.model.Point">
                <property name="x" value="10" />
                <property name="y" value="0" />
            </bean>
        </property>
        <!--<property name="refB">-->
            <!--<idref bean="line02b" />-->
        <!--</property>-->
    </bean>

    <!-- Field injection for list -->
    <bean id="pentagon" class="com.ashwin.java.springbootbeandemo.domain.model.Polygon">
        <property name="points">
            <list>
                <ref bean="point01" />

                <ref bean="point02"/>

                <bean class="com.ashwin.java.springbootbeandemo.domain.model.Point">
                    <property name="x" value="20" />
                    <property name="y" value="5" />
                </bean>

                <bean class="com.ashwin.java.springbootbeandemo.domain.model.Point">
                    <property name="x" value="25" />
                    <property name="y" value="10" />
                </bean>

                <bean class="com.ashwin.java.springbootbeandemo.domain.model.Point">
                    <property name="x" value="30" />
                    <property name="y" value="15" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="red01" name="redColor" class="com.ashwin.java.springbootbeandemo.domain.model.Color">
        <constructor-arg type="int" index="0" value="255" />
        <constructor-arg type="int" index="1" value="0" />
        <constructor-arg type="int" index="2" value="0" />
    </bean>

    <bean id="redCircle" class="com.ashwin.java.springbootbeandemo.domain.model.Circle" autowire="byName">
        <!-- Autowired -->
    </bean>

    <bean id="sphere" class="com.ashwin.java.springbootbeandemo.domain.model.Sphere">
        <!-- Autowired in the class -->
    </bean>

    <!-- Includes all annotation post-processing beans -->
    <context:annotation-config />

    <!-- Not required if annotation-config is used -->
    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />-->

    <!-- Validation post-processor -->
    <!-- deprecated, use @Autowired or @Autowired(required = true) instead
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
    -->
</beans>
